{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vijay\\\\B TECH\\\\SEVENTH SEM\\\\Placement-season\\\\quicksell\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('title');\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment').then(response => response.json()).then(data => {\n      setTickets(data.tickets);\n      setUsers(data.users);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // Define functions to group and sort tickets\n  const groupTickets = group => {\n    setGroupBy(group);\n  };\n  const sortTickets = sort => {\n    setSortBy(sort);\n  };\n  const toggleDropdown = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  // Define the options for group by and sort by\n  const groupOptions = ['status', 'user', 'priority'];\n  const sortOptions = ['title', 'priority'];\n  const getUserImage = userId => {\n    // Replace this with actual logic to get user image\n    return `https://placekitten.com/50/50?user=${userId}`;\n  };\n  const groupedAndSortedTickets = () => {\n    // Group tickets based on the selected option\n    const groupedTickets = {};\n    for (const ticket of tickets) {\n      const groupKey = groupBy === 'user' ? ticket.userId : groupBy === 'priority' ? ticket.priority : ticket.status;\n      if (!groupedTickets[groupKey]) {\n        groupedTickets[groupKey] = [];\n      }\n      groupedTickets[groupKey].push(ticket);\n    }\n\n    // Sort tickets based on the selected option\n    for (const key in groupedTickets) {\n      groupedTickets[key] = groupedTickets[key].sort((a, b) => {\n        if (sortBy === 'title') {\n          return a.title.localeCompare(b.title);\n        }\n        return b.priority - a.priority;\n      });\n    }\n    return groupedTickets;\n  };\n\n  // function getRandomAvatar(userId) {\n  //   const size = 20; // Set the size of the avatar (in pixels)\n  //   const baseUrl = `https://robohash.org/${userId}.png?size=${size}x${size}`;\n  //   return baseUrl;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi bi-sliders2`,\n            style: {\n              paddingRight: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), \" Display \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi bi-chevron-down`,\n            style: {\n              paddingLeft: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 83\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Group By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => groupTickets(e.target.value),\n              value: groupBy,\n              children: groupOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Sort By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => sortTickets(e.target.value),\n              value: sortBy,\n              style: {\n                marginLeft: '25px'\n              },\n              children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: Object.keys(groupedAndSortedTickets()).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: group\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), groupedAndSortedTickets()[group].map(ticket => {\n          var _users$find;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ticket.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: ticket.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"label\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '10px'\n                  },\n                  children: ticket.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, ticket.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-avatar-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getUserImage(ticket.userId),\n                  alt: \"Flower\",\n                  className: \"user-photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this), (_users$find = users.find(user => user.id === ticket.userId)) !== null && _users$find !== void 0 && _users$find.isOnline ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-dot active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-dot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, ticket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this);\n        })]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a+dwcIyfeS8Yx0IM9hoHQNXPWbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","users","setUsers","groupBy","setGroupBy","sortBy","setSortBy","isDropdownOpen","setDropdownOpen","fetch","then","response","json","data","catch","error","console","groupTickets","group","sortTickets","sort","toggleDropdown","groupOptions","sortOptions","getUserImage","userId","groupedAndSortedTickets","groupedTickets","ticket","groupKey","priority","status","push","key","a","b","title","localeCompare","className","children","onClick","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","marginBottom","onChange","e","target","value","map","option","marginLeft","Object","keys","_users$find","id","fontSize","tag","src","alt","find","user","isOnline","_c","$RefreshReg$"],"sources":["C:/Vijay/B TECH/SEVENTH SEM/Placement-season/quicksell/kanban-board/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\n\n\nfunction App() {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('title');\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment')\n      .then((response) => response.json())\n      .then((data) => {\n        setTickets(data.tickets);\n        setUsers(data.users);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  // Define functions to group and sort tickets\n  const groupTickets = (group) => {\n    setGroupBy(group);\n  };\n\n  const sortTickets = (sort) => {\n    setSortBy(sort);\n  };\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  // Define the options for group by and sort by\n  const groupOptions = ['status', 'user', 'priority'];\n  const sortOptions = ['title', 'priority'];\n\n  const getUserImage = (userId) => {\n    // Replace this with actual logic to get user image\n    return `https://placekitten.com/50/50?user=${userId}`;\n  };\n\n  const groupedAndSortedTickets = () => {\n    // Group tickets based on the selected option\n    const groupedTickets = {};\n    for (const ticket of tickets) {\n      const groupKey = groupBy === 'user' ? ticket.userId : groupBy === 'priority' ? ticket.priority : ticket.status;\n      if (!groupedTickets[groupKey]) {\n        groupedTickets[groupKey] = [];\n      }\n      groupedTickets[groupKey].push(ticket);\n    }\n\n    // Sort tickets based on the selected option\n    for (const key in groupedTickets) {\n      groupedTickets[key] = groupedTickets[key].sort((a, b) => {\n        if (sortBy === 'title') {\n          return a.title.localeCompare(b.title);\n        }\n        return b.priority - a.priority;\n      });\n    }\n\n    return groupedTickets;\n  };\n\n  // function getRandomAvatar(userId) {\n  //   const size = 20; // Set the size of the avatar (in pixels)\n  //   const baseUrl = `https://robohash.org/${userId}.png?size=${size}x${size}`;\n  //   return baseUrl;\n  // }\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"dropdown\">\n        <div className='button-box'>\n          <button onClick={toggleDropdown}>\n          <i className={`bi bi-sliders2`} style={{paddingRight:'14px'}}/> Display <i className={`bi bi-chevron-down`} style={{paddingLeft:'6px'}}/> </button>\n          {isDropdownOpen && (\n            <div className=\"dropdown-content\">\n              <div style={{marginBottom:'10px'}}>\n                <label>Group By:</label>\n                <select onChange={(e) => groupTickets(e.target.value)} value={groupBy}>\n                  {groupOptions.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label>Sort By:</label>\n                <select onChange={(e) => sortTickets(e.target.value)} value={sortBy} style={{marginLeft: '25px'}}>\n                  {sortOptions.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {/* <div className=\"options\">\n        <div>\n          <label>Group By:</label>\n          <select onChange={(e) => groupTickets(e.target.value)} value={groupBy}>\n            <option value=\"status\">Status</option>\n            <option value=\"user\">User</option>\n            <option value=\"priority\">Priority</option>\n          </select>\n        </div>\n        <div>\n          <label>Sort By:</label>\n          <select onChange={(e) => sortTickets(e.target.value)} value={sortBy}>\n            <option value=\"title\">Title</option>\n            <option value=\"priority\">Priority</option>\n          </select>\n        </div>\n      </div> */}\n      <div className=\"kanban-board\">\n        {Object.keys(groupedAndSortedTickets()).map((group) => (\n          <div key={group} className=\"group\">\n            <h2>{group}</h2>\n            {groupedAndSortedTickets()[group].map((ticket) => (\n              <div key={ticket.id} className=\"card\">\n                <div key={ticket.id} className='card-text'>\n                  <h4>{ticket.id}</h4>\n                  <h3>{ticket.title}</h3>\n                  <div className='label'>\n                    <p style={{fontSize:'10px'}}>{ticket.tag}</p>\n                  </div>\n                  {/* <p>Status: {ticket.status}</p>\n                  <p>Priority: {ticket.priority}</p>\n                  <p>User: {users.find((user) => user.id === ticket.userId)?.name}</p> */}\n                </div>\n                <div className=\"user-info\">\n                  <div className=\"user-avatar-container\">\n                    <img src={getUserImage(ticket.userId)} alt=\"Flower\" className=\"user-photo\" />\n                    {users.find((user) => user.id === ticket.userId)?.isOnline ? (\n                      <div className=\"status-dot active\"></div>\n                    ) : (\n                      <div className=\"status-dot\"></div>\n                    )}\n                  </div>\n                  \n                </div>\n                {/* <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={completedTasks[ticket.id] || false}\n                    onChange={() => handleCheckboxChange(ticket.id)}\n                  />{' '}\n                  Completed\n                </label> */}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* <div className='kanban-board'>\n\n      </div> */}\n      {/* <div className=\"kanban-board\">\n        {Object.keys(groupedAndSortedTickets()).map((group) => (\n          <div key={group} className=\"group\">\n            <h2>{group}</h2>\n            {groupedAndSortedTickets()[group].map((ticket) => (\n              <div key={ticket.id} className=\"card\">\n                <h4>{ticket.id}</h4>\n                <h3>{ticket.title}</h3>\n                <p>Status: {ticket.status}</p>\n                <p>Priority: {ticket.priority}</p>\n                <p>User: {users.find((user) => user.id === ticket.userId)?.name}</p>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}