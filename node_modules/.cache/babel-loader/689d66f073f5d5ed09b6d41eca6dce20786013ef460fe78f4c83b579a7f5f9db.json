{"ast":null,"code":"var _jsxFileName = \"C:\\\\Vijay\\\\B TECH\\\\SEVENTH SEM\\\\Placement-season\\\\quicksell\\\\kanban-board\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('title');\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment').then(response => response.json()).then(data => {\n      setTickets(data.tickets);\n      setUsers(data.users);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n\n  // Define functions to group and sort tickets\n  const groupTickets = group => {\n    setGroupBy(group);\n  };\n  const sortTickets = sort => {\n    setSortBy(sort);\n  };\n  const toggleDropdown = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  // Define the options for group by and sort by\n  const groupOptions = ['status', 'user', 'priority'];\n  const sortOptions = ['title', 'priority'];\n  const PriorityNames = {\n    '4': 'Urgent',\n    '3': 'High',\n    '2': 'Medium',\n    '1': 'Low',\n    '0': 'No priority'\n  };\n  // const getUserImage = (userId) => {\n  //   // Replace this with actual logic to get user image\n  //   return `https://placekitten.com/50/50?user=${userId}`;\n  // };\n  const groupImages = {\n    'Todo': './icons/Todo.png',\n    'In progress': './icons/Inprogress_icon.png',\n    'Backlog': './icons/backlog.png',\n    'Anoop sharma': './icons/default.jpeg',\n    'Yogesh': './icons/default.jpeg',\n    'Suresh': './icons/default.jpeg',\n    'Shankar Kumar': './icons/default.jpeg',\n    'Ramesh': './icons/default.jpeg',\n    'Urgent': './icons/urgent-logo.png',\n    'High': './icons/High.png',\n    'Medium': './icons/medium.png',\n    'Low': './icons/low.png',\n    'No priority': './icons/nopriority.jpg'\n    // Add more group names and image URLs as needed\n  };\n\n  const groupedAndSortedTickets = () => {\n    // Group tickets based on the selected option\n    const groupedTickets = {};\n    for (const ticket of tickets) {\n      var _users$find;\n      const groupKey = groupBy === 'user' ? (_users$find = users.find(user => user.id === ticket.userId)) === null || _users$find === void 0 ? void 0 : _users$find.name : groupBy === 'priority' ? PriorityNames[ticket.priority] : ticket.status;\n      if (!groupedTickets[groupKey]) {\n        groupedTickets[groupKey] = [];\n      }\n      groupedTickets[groupKey].push(ticket);\n    }\n\n    // Sort tickets based on the selected option\n    for (const key in groupedTickets) {\n      groupedTickets[key] = groupedTickets[key].sort((a, b) => {\n        if (sortBy === 'title') {\n          return a.title.localeCompare(b.title);\n        }\n        return b.priority - a.priority;\n      });\n    }\n    return groupedTickets;\n  };\n\n  // function getRandomAvatar(userId) {\n  //   const size = 20; // Set the size of the avatar (in pixels)\n  //   const baseUrl = `https://robohash.org/${userId}.png?size=${size}x${size}`;\n  //   return baseUrl;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDropdown,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi bi-sliders2`,\n            style: {\n              paddingRight: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), \" Display \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: `bi bi-chevron-down`,\n            style: {\n              paddingLeft: '6px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 83\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Group By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => groupTickets(e.target.value),\n              value: groupBy,\n              children: groupOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Sort By:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => sortTickets(e.target.value),\n              value: sortBy,\n              style: {\n                marginLeft: '25px'\n              },\n              children: sortOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: Object.keys(groupedAndSortedTickets()).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(groupImages[group]),\n            alt: \"\",\n            className: \"group-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: group\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), groupedAndSortedTickets()[group].map(ticket => {\n          var _users$find2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ticket.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: ticket.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-label\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: '10px'\n                  },\n                  children: ticket.tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, ticket.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-avatar-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: require('./icons/default.jpeg'),\n                  alt: \"\",\n                  className: \"user-photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), (_users$find2 = users.find(user => user.id === ticket.userId)) !== null && _users$find2 !== void 0 && _users$find2.available ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-dot active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"status-dot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, ticket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this);\n        })]\n      }, group, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a+dwcIyfeS8Yx0IM9hoHQNXPWbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","users","setUsers","groupBy","setGroupBy","sortBy","setSortBy","isDropdownOpen","setDropdownOpen","fetch","then","response","json","data","catch","error","console","groupTickets","group","sortTickets","sort","toggleDropdown","groupOptions","sortOptions","PriorityNames","groupImages","groupedAndSortedTickets","groupedTickets","ticket","_users$find","groupKey","find","user","id","userId","name","priority","status","push","key","a","b","title","localeCompare","className","children","onClick","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","paddingLeft","marginBottom","onChange","e","target","value","map","option","marginLeft","Object","keys","src","require","alt","_users$find2","fontSize","tag","available","_c","$RefreshReg$"],"sources":["C:/Vijay/B TECH/SEVENTH SEM/Placement-season/quicksell/kanban-board/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport './App.css';\n\n\nfunction App() {\n  const [tickets, setTickets] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [groupBy, setGroupBy] = useState('status');\n  const [sortBy, setSortBy] = useState('title');\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('https://api.quicksell.co/v1/internal/frontend-assignment')\n      .then((response) => response.json())\n      .then((data) => {\n        setTickets(data.tickets);\n        setUsers(data.users);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  // Define functions to group and sort tickets\n  const groupTickets = (group) => {\n    setGroupBy(group);\n  };\n\n  const sortTickets = (sort) => {\n    setSortBy(sort);\n  };\n\n  const toggleDropdown = () => {\n    setDropdownOpen(!isDropdownOpen);\n  };\n\n  // Define the options for group by and sort by\n  const groupOptions = ['status', 'user', 'priority'];\n  const sortOptions = ['title', 'priority'];\n\n  const PriorityNames = {\n    '4' : 'Urgent' ,\n    '3' : 'High' ,\n    '2' : 'Medium' ,\n    '1' : 'Low' ,\n    '0' : 'No priority' ,\n  }\n  // const getUserImage = (userId) => {\n  //   // Replace this with actual logic to get user image\n  //   return `https://placekitten.com/50/50?user=${userId}`;\n  // };\n  const groupImages = {\n    'Todo': './icons/Todo.png',\n    'In progress': './icons/Inprogress_icon.png',\n    'Backlog': './icons/backlog.png',\n    'Anoop sharma': './icons/default.jpeg',\n    'Yogesh' : './icons/default.jpeg',\n    'Suresh' : './icons/default.jpeg',\n    'Shankar Kumar' : './icons/default.jpeg',\n    'Ramesh' : './icons/default.jpeg',\n    'Urgent' : './icons/urgent-logo.png',\n    'High' : './icons/High.png',\n    'Medium' : './icons/medium.png',\n    'Low' : './icons/low.png',\n    'No priority' : './icons/nopriority.jpg',\n    // Add more group names and image URLs as needed\n  };\n  \n\n  const groupedAndSortedTickets = () => {\n    // Group tickets based on the selected option\n    const groupedTickets = {};\n    for (const ticket of tickets) {\n      const groupKey = groupBy === 'user' ? (users.find((user) => user.id === ticket.userId)?.name) : groupBy === 'priority' ? (PriorityNames[ticket.priority]) : ticket.status;\n      if (!groupedTickets[groupKey]) {\n        groupedTickets[groupKey] = [];\n      }\n      \n      groupedTickets[groupKey].push(ticket);\n    }\n\n    // Sort tickets based on the selected option\n    for (const key in groupedTickets) {\n      groupedTickets[key] = groupedTickets[key].sort((a, b) => {\n        if (sortBy === 'title') {\n          return a.title.localeCompare(b.title);\n        }\n        return b.priority - a.priority;\n      });\n    }\n\n    return groupedTickets;\n  };\n\n  // function getRandomAvatar(userId) {\n  //   const size = 20; // Set the size of the avatar (in pixels)\n  //   const baseUrl = `https://robohash.org/${userId}.png?size=${size}x${size}`;\n  //   return baseUrl;\n  // }\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"dropdown\">\n        <div className='button-box'>\n          <button onClick={toggleDropdown}>\n          <i className={`bi bi-sliders2`} style={{paddingRight:'14px'}}/> Display <i className={`bi bi-chevron-down`} style={{paddingLeft:'6px'}}/> </button>\n          {isDropdownOpen && (\n            <div className=\"dropdown-content\">\n              <div style={{marginBottom:'10px'}}>\n                <label>Group By:</label>\n                <select onChange={(e) => groupTickets(e.target.value)} value={groupBy}>\n                  {groupOptions.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label>Sort By:</label>\n                <select onChange={(e) => sortTickets(e.target.value)} value={sortBy} style={{marginLeft: '25px'}}>\n                  {sortOptions.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {/* <div className=\"options\">\n        <div>\n          <label>Group By:</label>\n          <select onChange={(e) => groupTickets(e.target.value)} value={groupBy}>\n            <option value=\"status\">Status</option>\n            <option value=\"user\">User</option>\n            <option value=\"priority\">Priority</option>\n          </select>\n        </div>\n        <div>\n          <label>Sort By:</label>\n          <select onChange={(e) => sortTickets(e.target.value)} value={sortBy}>\n            <option value=\"title\">Title</option>\n            <option value=\"priority\">Priority</option>\n          </select>\n        </div>\n      </div> */}\n      <div className=\"kanban-board\">\n        {Object.keys(groupedAndSortedTickets()).map((group) => (\n          <div key={group} className=\"group\">\n            <div className='group-title'> \n              <img src={require(groupImages[group])} alt=\"\" className=\"group-photo\" />\n              <h2>{group}</h2>\n            </div>\n            {groupedAndSortedTickets()[group].map((ticket) => (\n              <div key={ticket.id} className=\"card\">\n                <div key={ticket.id} className='card-text'>\n                  <h4>{ticket.id}</h4>\n                  <h3>{ticket.title}</h3>\n                  <div className='card-label'>\n                    <p style={{fontSize:'10px'}}>{ticket.tag}</p>\n                  </div>\n                  {/* <p>Status: {ticket.status}</p>\n                  <p>Priority: {ticket.priority}</p>\n                  <p>User: {users.find((user) => user.id === ticket.userId)?.name}</p> */}\n                </div>\n                <div className=\"user-info\">\n                  <div className=\"user-avatar-container\">\n                    <img src={require('./icons/default.jpeg')} alt=\"\" className=\"user-photo\" />\n                    {users.find((user) => user.id === ticket.userId)?.available ? (\n                      <div className=\"status-dot active\"></div>\n                    ) : (\n                      <div className=\"status-dot\"></div>\n                    )}\n                  </div>\n                  \n                </div>\n                {/* <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={completedTasks[ticket.id] || false}\n                    onChange={() => handleCheckboxChange(ticket.id)}\n                  />{' '}\n                  Completed\n                </label> */}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n\n      {/* <div className='kanban-board'>\n\n      </div> */}\n      {/* <div className=\"kanban-board\">\n        {Object.keys(groupedAndSortedTickets()).map((group) => (\n          <div key={group} className=\"group\">\n            <h2>{group}</h2>\n            {groupedAndSortedTickets()[group].map((ticket) => (\n              <div key={ticket.id} className=\"card\">\n                <h4>{ticket.id}</h4>\n                <h3>{ticket.title}</h3>\n                <p>Status: {ticket.status}</p>\n                <p>Priority: {ticket.priority}</p>\n                <p>User: {users.find((user) => user.id === ticket.userId)?.name}</p>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,0CAA0C;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EAChD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAC7C,MAAM,CAACc,cAAc,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACd;IACAe,KAAK,CAAC,0DAA0D,CAAC,CAC9DC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdb,UAAU,CAACa,IAAI,CAACd,OAAO,CAAC;MACxBG,QAAQ,CAACW,IAAI,CAACZ,KAAK,CAAC;IACtB,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9Bd,UAAU,CAACc,KAAK,CAAC;EACnB,CAAC;EAED,MAAMC,WAAW,GAAIC,IAAI,IAAK;IAC5Bd,SAAS,CAACc,IAAI,CAAC;EACjB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,eAAe,CAAC,CAACD,cAAc,CAAC;EAClC,CAAC;;EAED;EACA,MAAMe,YAAY,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC;EACnD,MAAMC,WAAW,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC;EAEzC,MAAMC,aAAa,GAAG;IACpB,GAAG,EAAG,QAAQ;IACd,GAAG,EAAG,MAAM;IACZ,GAAG,EAAG,QAAQ;IACd,GAAG,EAAG,KAAK;IACX,GAAG,EAAG;EACR,CAAC;EACD;EACA;EACA;EACA;EACA,MAAMC,WAAW,GAAG;IAClB,MAAM,EAAE,kBAAkB;IAC1B,aAAa,EAAE,6BAA6B;IAC5C,SAAS,EAAE,qBAAqB;IAChC,cAAc,EAAE,sBAAsB;IACtC,QAAQ,EAAG,sBAAsB;IACjC,QAAQ,EAAG,sBAAsB;IACjC,eAAe,EAAG,sBAAsB;IACxC,QAAQ,EAAG,sBAAsB;IACjC,QAAQ,EAAG,yBAAyB;IACpC,MAAM,EAAG,kBAAkB;IAC3B,QAAQ,EAAG,oBAAoB;IAC/B,KAAK,EAAG,iBAAiB;IACzB,aAAa,EAAG;IAChB;EACF,CAAC;;EAGD,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;IACpC;IACA,MAAMC,cAAc,GAAG,CAAC,CAAC;IACzB,KAAK,MAAMC,MAAM,IAAI7B,OAAO,EAAE;MAAA,IAAA8B,WAAA;MAC5B,MAAMC,QAAQ,GAAG3B,OAAO,KAAK,MAAM,IAAA0B,WAAA,GAAI5B,KAAK,CAAC8B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,MAAM,CAAC,cAAAL,WAAA,uBAA/CA,WAAA,CAAiDM,IAAI,GAAIhC,OAAO,KAAK,UAAU,GAAIqB,aAAa,CAACI,MAAM,CAACQ,QAAQ,CAAC,GAAIR,MAAM,CAACS,MAAM;MACzK,IAAI,CAACV,cAAc,CAACG,QAAQ,CAAC,EAAE;QAC7BH,cAAc,CAACG,QAAQ,CAAC,GAAG,EAAE;MAC/B;MAEAH,cAAc,CAACG,QAAQ,CAAC,CAACQ,IAAI,CAACV,MAAM,CAAC;IACvC;;IAEA;IACA,KAAK,MAAMW,GAAG,IAAIZ,cAAc,EAAE;MAChCA,cAAc,CAACY,GAAG,CAAC,GAAGZ,cAAc,CAACY,GAAG,CAAC,CAACnB,IAAI,CAAC,CAACoB,CAAC,EAAEC,CAAC,KAAK;QACvD,IAAIpC,MAAM,KAAK,OAAO,EAAE;UACtB,OAAOmC,CAAC,CAACE,KAAK,CAACC,aAAa,CAACF,CAAC,CAACC,KAAK,CAAC;QACvC;QACA,OAAOD,CAAC,CAACL,QAAQ,GAAGI,CAAC,CAACJ,QAAQ;MAChC,CAAC,CAAC;IACJ;IAEA,OAAOT,cAAc;EACvB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAGA,oBACE/B,OAAA;IAAKgD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjD,OAAA;MAAKgD,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBjD,OAAA;QAAKgD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBjD,OAAA;UAAQkD,OAAO,EAAEzB,cAAe;UAAAwB,QAAA,gBAChCjD,OAAA;YAAGgD,SAAS,EAAG,gBAAgB;YAACG,KAAK,EAAE;cAACC,YAAY,EAAC;YAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,aAAS,eAAAxD,OAAA;YAAGgD,SAAS,EAAG,oBAAoB;YAACG,KAAK,EAAE;cAACM,WAAW,EAAC;YAAK;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClJ7C,cAAc,iBACbX,OAAA;UAAKgD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BjD,OAAA;YAAKmD,KAAK,EAAE;cAACO,YAAY,EAAC;YAAM,CAAE;YAAAT,QAAA,gBAChCjD,OAAA;cAAAiD,QAAA,EAAO;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxBxD,OAAA;cAAQ2D,QAAQ,EAAGC,CAAC,IAAKvC,YAAY,CAACuC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cAACA,KAAK,EAAEvD,OAAQ;cAAA0C,QAAA,EACnEvB,YAAY,CAACqC,GAAG,CAAEC,MAAM,iBACvBhE,OAAA;gBAAqB8D,KAAK,EAAEE,MAAO;gBAAAf,QAAA,EAChCe;cAAM,GADIA,MAAM;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEX,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNxD,OAAA;YAAAiD,QAAA,gBACEjD,OAAA;cAAAiD,QAAA,EAAO;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvBxD,OAAA;cAAQ2D,QAAQ,EAAGC,CAAC,IAAKrC,WAAW,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cAACA,KAAK,EAAErD,MAAO;cAAC0C,KAAK,EAAE;gBAACc,UAAU,EAAE;cAAM,CAAE;cAAAhB,QAAA,EAC9FtB,WAAW,CAACoC,GAAG,CAAEC,MAAM,iBACtBhE,OAAA;gBAAqB8D,KAAK,EAAEE,MAAO;gBAAAf,QAAA,EAChCe;cAAM,GADIA,MAAM;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEX,CACT;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAkBNxD,OAAA;MAAKgD,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BiB,MAAM,CAACC,IAAI,CAACrC,uBAAuB,CAAC,CAAC,CAAC,CAACiC,GAAG,CAAEzC,KAAK,iBAChDtB,OAAA;QAAiBgD,SAAS,EAAC,OAAO;QAAAC,QAAA,gBAChCjD,OAAA;UAAKgD,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BjD,OAAA;YAAKoE,GAAG,EAAEC,OAAO,CAACxC,WAAW,CAACP,KAAK,CAAC,CAAE;YAACgD,GAAG,EAAC,EAAE;YAACtB,SAAS,EAAC;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxExD,OAAA;YAAAiD,QAAA,EAAK3B;UAAK;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,EACL1B,uBAAuB,CAAC,CAAC,CAACR,KAAK,CAAC,CAACyC,GAAG,CAAE/B,MAAM;UAAA,IAAAuC,YAAA;UAAA,oBAC3CvE,OAAA;YAAqBgD,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnCjD,OAAA;cAAqBgD,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxCjD,OAAA;gBAAAiD,QAAA,EAAKjB,MAAM,CAACK;cAAE;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBxD,OAAA;gBAAAiD,QAAA,EAAKjB,MAAM,CAACc;cAAK;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvBxD,OAAA;gBAAKgD,SAAS,EAAC,YAAY;gBAAAC,QAAA,eACzBjD,OAAA;kBAAGmD,KAAK,EAAE;oBAACqB,QAAQ,EAAC;kBAAM,CAAE;kBAAAvB,QAAA,EAAEjB,MAAM,CAACyC;gBAAG;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC;YAAA,GALExB,MAAM,CAACK,EAAE;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASd,CAAC,eACNxD,OAAA;cAAKgD,SAAS,EAAC,WAAW;cAAAC,QAAA,eACxBjD,OAAA;gBAAKgD,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,gBACpCjD,OAAA;kBAAKoE,GAAG,EAAEC,OAAO,CAAC,sBAAsB,CAAE;kBAACC,GAAG,EAAC,EAAE;kBAACtB,SAAS,EAAC;gBAAY;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,EAC1E,CAAAe,YAAA,GAAAlE,KAAK,CAAC8B,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,MAAM,CAAC,cAAAiC,YAAA,eAA/CA,YAAA,CAAiDG,SAAS,gBACzD1E,OAAA;kBAAKgD,SAAS,EAAC;gBAAmB;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,gBAEzCxD,OAAA;kBAAKgD,SAAS,EAAC;gBAAY;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAClC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEH,CAAC;UAAA,GArBExB,MAAM,CAACK,EAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA8Bd,CAAC;QAAA,CACP,CAAC;MAAA,GArCMlC,KAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsCV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAqBH,CAAC;AAEV;AAACtD,EAAA,CApNQD,GAAG;AAAA0E,EAAA,GAAH1E,GAAG;AAsNZ,eAAeA,GAAG;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}